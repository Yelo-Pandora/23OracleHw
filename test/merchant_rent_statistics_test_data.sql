-- 商户租金统计报表功能测试数据 (用例2.7.7)
-- 测试时间：2024年12月

-- 清理可能存在的测试数据
DELETE FROM RENT_STORE WHERE STORE_ID BETWEEN 2001 AND 2010;
DELETE FROM STORE_ACCOUNT WHERE STORE_ID BETWEEN 2001 AND 2010;
DELETE FROM STORE WHERE STORE_ID BETWEEN 2001 AND 2010;
DELETE FROM RETAIL_AREA WHERE AREA_ID BETWEEN 3001 AND 3010;
DELETE FROM AREA WHERE AREA_ID BETWEEN 3001 AND 3010;

-- 删除可能存在的测试账号
DELETE FROM ACCOUNT WHERE ACCOUNT IN ('rent_admin', 'finance_manager', 'statistics_viewer');

COMMIT;

-- 1. 创建测试区域和商铺（10个测试商铺，用于租金统计分析）
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3001, 0, 120, 'RETAIL'); -- 精品服装店
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3002, 0, 150, 'EVENT'); -- 运动品牌店
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3003, 0, 200, 'RETAIL'); -- 家居用品店
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3004, 0, 80,  'RETAIL'); -- 珠宝首饰店
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3005, 0, 300, 'RETAIL'); -- 大型超市
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3006, 0, 100, 'RETAIL'); -- 咖啡厅
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3007, 0, 180, 'RETAIL'); -- 药店
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3008, 0, 90,  'RETAIL'); -- 数码产品店
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3009, 0, 250, 'RETAIL'); -- 餐饮连锁店
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3010, 1, 130, 'RETAIL');  -- 空置区域

-- 2. 创建零售区域信息（包含不同租金水平）
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3001, '已租用', 15000.00); -- 高租金
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3002, '已租用', 12000.00); -- 中高租金
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3003, '已租用', 18000.00); -- 最高租金
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3004, '已租用', 25000.00); -- 超高租金（珠宝店）
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3005, '已租用', 20000.00); -- 大型商铺
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3006, '已租用', 8000.00);  -- 中等租金
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3007, '已租用', 10000.00); -- 中等租金
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3008, '已租用', 9000.00);  -- 中等租金
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3009, '已租用', 22000.00); -- 高租金（餐饮）
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3010, '空置', 11000.00);   -- 空置

-- 3. 创建商铺信息（包含不同类型的商户）
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2001, '时尚精品服装', '正常营业', '个人', '李时尚', '13800001001', DATE '2023-01-01', DATE '2025-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2002, '运动世界旗舰店', '正常营业', '企业连锁', '王运动', '13800001002', DATE '2023-03-01', DATE '2026-02-28');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2003, '温馨家居生活馆', '正常营业', '个人', '张家居', '13800001003', DATE '2023-06-01', DATE '2026-05-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2004, '璀璨珠宝', '正常营业', '个人', '陈珠宝', '13800001004', DATE '2022-09-01', DATE '2025-08-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2005, '永辉生活超市', '正常营业', '企业连锁', '刘超市', '13800001005', DATE '2023-01-01', DATE '2028-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2006, '星巴克咖啡', '正常营业', '企业连锁', '赵咖啡', '13800001006', DATE '2023-04-01', DATE '2026-03-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2007, '康之家药店', '正常营业', '企业连锁', '孙药师', '13800001007', DATE '2022-12-01', DATE '2025-11-30');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2008, '科技数码港', '歇业中', '个人', '周数码', '13800001008', DATE '2023-07-01', DATE '2026-06-30');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2009, '麦当劳餐厅', '正常营业', '企业连锁', '吴餐饮', '13800001009', DATE '2023-02-01', DATE '2028-01-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2010, '美容美发沙龙', '翻新中', '个人', '郑美容', '13800001010', DATE '2023-08-01', DATE '2026-07-31');

-- 4. 创建租用关系
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2001, 3001);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2002, 3002);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2003, 3003);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2004, 3004);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2005, 3005);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2006, 3006);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2007, 3007);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2008, 3008);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2009, 3009);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2010, 3010); -- 翻新中的商铺

-- 5. 创建管理员和操作员账号（用于权限测试）
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('rent_admin', 'RentAdmin123', '员工', '租金管理员', 1);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('finance_manager', 'Finance123', '员工', '财务经理', 2);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('statistics_viewer', 'Stats123', '员工', '统计查看员', 3);

-- 6. 创建商户账号（用于商户端查询测试）
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('fashion_merchant', 'Fashion123', '商户', '李时尚', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('sports_merchant', 'Sports123', '商户', '王运动', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('jewelry_merchant', 'Jewelry123', '商户', '陈珠宝', 4);

-- 7. 创建商户账号关联
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('fashion_merchant', 2001);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('sports_merchant', 2002);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('jewelry_merchant', 2004);

COMMIT;

-- 8. 验证测试数据
PROMPT '=== 租金统计报表测试数据验证 ===';

PROMPT '1. 区域信息验证:';
SELECT 
    a.AREA_ID AS "区域ID",
    a.AREA_SIZE AS "面积",
    ra.BASE_RENT AS "基础租金",
    ra.RENT_STATUS AS "租用状态"
FROM AREA a
LEFT JOIN RETAIL_AREA ra ON a.AREA_ID = ra.AREA_ID
WHERE a.AREA_ID BETWEEN 3001 AND 3010
ORDER BY a.AREA_ID;

PROMPT '2. 商铺信息验证:';
SELECT 
    s.STORE_ID AS "商铺ID",
    s.STORE_NAME AS "商铺名称",
    s.STORE_STATUS AS "营业状态",
    s.STORE_TYPE AS "商铺类型",
    s.TENANT_NAME AS "租户名称",
    ra.BASE_RENT AS "月租金"
FROM STORE s
JOIN RENT_STORE rs ON s.STORE_ID = rs.STORE_ID
JOIN RETAIL_AREA ra ON rs.AREA_ID = ra.AREA_ID
WHERE s.STORE_ID BETWEEN 2001 AND 2010
ORDER BY s.STORE_ID;

PROMPT '3. 账号权限验证:';
SELECT 
    ACCOUNT AS "账号",
    IDENTITY AS "身份",
    USERNAME AS "用户名",
    AUTHORITY AS "权限等级"
FROM ACCOUNT 
WHERE ACCOUNT IN ('rent_admin', 'finance_manager', 'statistics_viewer', 'fashion_merchant', 'sports_merchant', 'jewelry_merchant')
ORDER BY AUTHORITY;

PROMPT '4. 租金统计汇总:';
SELECT 
    COUNT(*) AS "商铺总数",
    COUNT(CASE WHEN s.STORE_STATUS = '正常营业' THEN 1 END) AS "正常营业",
    COUNT(CASE WHEN s.STORE_STATUS = '歇业中' THEN 1 END) AS "歇业中",
    COUNT(CASE WHEN s.STORE_STATUS = '翻新中' THEN 1 END) AS "翻新中",
    SUM(ra.BASE_RENT) AS "租金总额",
    ROUND(AVG(ra.BASE_RENT), 2) AS "平均租金",
    MAX(ra.BASE_RENT) AS "最高租金",
    MIN(ra.BASE_RENT) AS "最低租金"
FROM STORE s
JOIN RENT_STORE rs ON s.STORE_ID = rs.STORE_ID
JOIN RETAIL_AREA ra ON rs.AREA_ID = ra.AREA_ID
WHERE s.STORE_ID BETWEEN 2001 AND 2010;

PROMPT '5. 各区域租金分布:';
SELECT 
    rs.AREA_ID AS "区域ID",
    s.STORE_NAME AS "商铺名称",
    ra.BASE_RENT AS "月租金",
    ROUND(ra.BASE_RENT / a.AREA_SIZE, 2) AS "每平米租金",
    s.STORE_STATUS AS "状态"
FROM STORE s
JOIN RENT_STORE rs ON s.STORE_ID = rs.STORE_ID
JOIN RETAIL_AREA ra ON rs.AREA_ID = ra.AREA_ID
JOIN AREA a ON rs.AREA_ID = a.AREA_ID
WHERE s.STORE_ID BETWEEN 2001 AND 2010
ORDER BY ra.BASE_RENT DESC;

PROMPT '=== 测试数据导入完成 ===';
PROMPT '您现在可以使用以下账号进行测试：';
PROMPT '1. rent_admin (权限等级1) - 租金管理员，可查看所有报表';
PROMPT '2. finance_manager (权限等级2) - 财务经理，可查看租金统计';
PROMPT '3. statistics_viewer (权限等级3) - 统计查看员，权限受限';
PROMPT '4. fashion_merchant (权限等级4) - 服装店商户';
PROMPT '5. sports_merchant (权限等级4) - 运动店商户';
PROMPT '6. jewelry_merchant (权限等级4) - 珠宝店商户';

PROMPT '测试API地址示例：';
PROMPT 'GET /api/Store/RentStatisticsReport?period=202412&dimension=all&operatorAccount=rent_admin';
PROMPT 'GET /api/Store/RentCollectionDetails?period=202412&operatorAccount=finance_manager';
PROMPT 'GET /api/Store/RentTrendAnalysis?startPeriod=202401&endPeriod=202412&operatorAccount=rent_admin';
