-- =====================================================================================
-- 完整的测试数据集成SQL脚本
-- 包含所有测试功能所需的数据，避免冲突，确保数据完整性
-- 创建日期：2025年8月25日
-- 说明：运行此脚本后，所有测试功能都可以正常运行
-- =====================================================================================

-- 设置会话模式
ALTER SESSION SET CURRENT_SCHEMA = ORACLEDBA;
SET DEFINE OFF;

-- =====================================================================================
-- 第一部分：清理所有数据
-- =====================================================================================
-- Switch to the correct schema
ALTER SESSION SET CURRENT_SCHEMA = ORACLEDBA;

-- Disable foreign key constraints temporarily (to avoid issues with deletion order)
BEGIN
  FOR c IN (SELECT table_name, constraint_name 
            FROM user_constraints 
            WHERE constraint_type = 'R') LOOP
    EXECUTE IMMEDIATE 'ALTER TABLE ' || c.table_name || 
                      ' DISABLE CONSTRAINT ' || c.constraint_name;
  END LOOP;
END;
/

-- Delete data from all tables (ordered to respect foreign key relationships)
DELETE FROM VENUE_EVENT_DETAIL;
DELETE FROM PART_STORE;
DELETE FROM TEMP_AUTHORITY;
DELETE FROM STAFF_ACCOUNT;
DELETE FROM STORE_ACCOUNT;
DELETE FROM SALARY_SLIP;
DELETE FROM REPAIR_ORDER;
DELETE FROM RENT_STORE;
DELETE FROM PARKING_SPACE_DISTRIBUTION;
DELETE FROM PARK;
DELETE FROM CAR;
DELETE FROM EQUIPMENT_LOCATION;
DELETE FROM SALE_EVENT;
DELETE FROM VENUE_EVENT;
DELETE FROM EVENT;
DELETE FROM STORE;
DELETE FROM STAFF;
DELETE FROM ACCOUNT;
DELETE FROM RETAIL_AREA;
DELETE FROM PARKING_LOT;
DELETE FROM EVENT_AREA;
DELETE FROM OTHER_AREA;
DELETE FROM EQUIPMENT;
DELETE FROM PARKING_SPACE;
DELETE FROM COLLABORATION;
DELETE FROM AREA;
DELETE FROM MONTH_SALARY_COST;

-- Re-enable foreign key constraints
BEGIN
  FOR c IN (SELECT table_name, constraint_name 
            FROM user_constraints 
            WHERE constraint_type = 'R') LOOP
    EXECUTE IMMEDIATE 'ALTER TABLE ' || c.table_name || 
                      ' ENABLE CONSTRAINT ' || c.constraint_name;
  END LOOP;
END;
/

COMMIT;

-- =====================================================================================
-- 第二部分：基础账号数据（管理员和权限测试）
-- =====================================================================================

-- 1. 创建管理员账号
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('admin', 'admin123', '员工', '管理员', 1);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('admin_test', 'admin123', '员工', '员工', 1);

-- 2. 创建财务管理员账号
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('finance_admin', 'finance123', '员工', '财务部主管', 1);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('finance_manager', 'Finance123', '员工', '财务经理', 2);

-- 3. 创建统计查看员账号
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('statistics_viewer', 'Stats123', '员工', '统计查看员', 3);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('rent_admin', 'RentAdmin123', '员工', '租金管理员', 1);

-- 4. 创建普通用户账号（权限测试用）
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('guest', 'guest123', '游客', '游客', 5);

-- 5. 创建员工账号和信息
INSERT INTO STAFF (STAFF_ID, STAFF_NAME, STAFF_SEX, STAFF_APARTMENT, STAFF_POSTITION, STAFF_SALARY)
VALUES (1001, '张三', '男', '客服部', '客服', 6000);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY)
VALUES ('staff_zhang', 'password123', '员工', '张三', 1);

INSERT INTO STAFF_ACCOUNT (ACCOUNT, STAFF_ID) VALUES ('staff_zhang', 1001);

COMMIT;

-- =====================================================================================
-- 管理员账号对应的 STAFF 与 STAFF_ACCOUNT 创建（简单直接的 INSERT 格式，与张三同样风格）
-- 说明：假定对应的 ACCOUNT 已在上文插入；此处直接插入 STAFF 记录并建立 STAFF_ACCOUNT 关联。
-- =====================================================================================

INSERT INTO STAFF (STAFF_ID, STAFF_NAME, STAFF_SEX, STAFF_APARTMENT, STAFF_POSTITION, STAFF_SALARY)
VALUES (1101, '系统管理员', '男', '管理部', '管理员', 0);
INSERT INTO STAFF_ACCOUNT (ACCOUNT, STAFF_ID) VALUES ('admin', 1101);

INSERT INTO STAFF (STAFF_ID, STAFF_NAME, STAFF_SEX, STAFF_APARTMENT, STAFF_POSTITION, STAFF_SALARY)
VALUES (1102, '测试管理员', '女', '测试部', '管理员', 0);
INSERT INTO STAFF_ACCOUNT (ACCOUNT, STAFF_ID) VALUES ('admin_test', 1102);

INSERT INTO STAFF (STAFF_ID, STAFF_NAME, STAFF_SEX, STAFF_APARTMENT, STAFF_POSTITION, STAFF_SALARY)
VALUES (1103, '财务主管', '女', '财务部', '财务', 0);
INSERT INTO STAFF_ACCOUNT (ACCOUNT, STAFF_ID) VALUES ('finance_admin', 1103);

INSERT INTO STAFF (STAFF_ID, STAFF_NAME, STAFF_SEX, STAFF_APARTMENT, STAFF_POSTITION, STAFF_SALARY)
VALUES (1104, '租金管理员', '男', '租金部', '管理员', 0);
INSERT INTO STAFF_ACCOUNT (ACCOUNT, STAFF_ID) VALUES ('rent_admin', 1104);

COMMIT;

-- =====================================================================================
-- 第三部分：区域数据（支持所有测试场景）
-- =====================================================================================

-- 1. 创建零售区域（用于店铺管理测试）
-- 新增店面功能测试区域（1001-1003）
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (1001, 1, 50, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (1002, 1, 80, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (1003, 0, 120, 'RETAIL');

INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (1001, '空置', 5000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (1002, '空置', 8000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (1003, '已租用', 12000.00);

-- 店面状态管理测试区域（2001-2003）
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (2001, 0, 60, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (2002, 0, 90, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (2003, 0, 150, 'RETAIL');

INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (2001, '已租用', 6000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (2002, '已租用', 9000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (2003, '已租用', 15000.00);

-- 租金统计测试区域（3001-3010）
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3001, 0, 120, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3002, 0, 150, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3003, 0, 200, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3004, 0, 80, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3005, 0, 300, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3006, 0, 100, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3007, 0, 180, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3008, 0, 90, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3009, 0, 250, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (3010, 1, 130, 'RETAIL');

INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3001, '已租用', 15000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3002, '已租用', 12000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3003, '已租用', 18000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3004, '已租用', 25000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3005, '已租用', 20000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3006, '已租用', 8000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3007, '已租用', 10000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3008, '已租用', 9000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3009, '已租用', 22000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (3010, '空置', 11000.00);

-- 商户信息统计测试区域（5001-5008）
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5001, 1, 50, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5002, 1, 80, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5003, 0, 120, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5004, 0, 100, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5005, 0, 60, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5006, 0, 150, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5007, 0, 90, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (5008, 0, 75, 'RETAIL');

INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5001, '空置', 8000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5002, '空置', 12000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5003, '已租用', 20000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5004, '已租用', 16000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5005, '已租用', 10000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5006, '已租用', 25000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5007, '已租用', 14000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (5008, '已租用', 11000.00);

-- 租金收取功能测试区域（6001-6005）
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6001, 0, 80, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6002, 0, 120, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6003, 0, 100, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6004, 0, 150, 'RETAIL');
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6005, 0, 90, 'RETAIL');

INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6001, '已租用', 12000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6002, '已租用', 18000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6003, '已租用', 15000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6004, '已租用', 22000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6005, '已租用', 13000.00);

-- 基础测试区域（为基础店铺添加）
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (1, 0, 60, 'RETAIL');
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (1, '已租用', 7000.00);

COMMIT;

-- =====================================================================================
-- 第四部分：店铺数据（支持所有店铺相关测试）
-- =====================================================================================

-- 1. 基础测试店铺（商户信息管理）
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (1, '测试咖啡店', '正常营业', '个人', '张三', '13800138000', DATE '2024-01-01', DATE '2025-12-31');

-- 2. 店铺测试数据（不同状态和类型）
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2001, '星巴克咖啡', '正常营业', '企业连锁', '星巴克中国', '13800138001', DATE '2024-01-01', DATE '2026-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2002, '优衣库服装店', '正常营业', '企业连锁', '优衣库中国', '13800138002', DATE '2024-02-01', DATE '2026-01-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (2003, '华为专卖店', '正常营业', '企业连锁', '华为公司', '13800138003', DATE '2024-03-01', DATE '2025-02-28');

-- 3. 店面状态管理测试店铺
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (3001, '麦当劳餐厅', '正常营业', '企业连锁', '麦当劳中国', '13900139001', DATE '2024-01-15', DATE '2026-01-14');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (3002, '小米专卖店', '正常营业', '企业连锁', '小米科技', '13900139002', DATE '2024-02-01', DATE '2025-01-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (3003, '周大福珠宝', '正常营业', '企业连锁', '周大福集团', '13900139003', DATE '2024-03-01', DATE '2027-02-28');

-- 4. 租金统计测试店铺（包含不同营业状态）- 使用新的店铺ID避免冲突
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4001, '时尚精品服装', '正常营业', '个人', '李时尚', '13800001001', DATE '2023-01-01', DATE '2025-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4002, '运动世界旗舰店', '正常营业', '企业连锁', '王运动', '13800001002', DATE '2023-03-01', DATE '2026-02-28');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4003, '温馨家居生活馆', '正常营业', '个人', '张家居', '13800001003', DATE '2023-06-01', DATE '2026-05-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4004, '璀璨珠宝', '正常营业', '个人', '陈珠宝', '13800001004', DATE '2022-09-01', DATE '2025-08-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4005, '永辉生活超市', '正常营业', '企业连锁', '刘超市', '13800001005', DATE '2023-01-01', DATE '2028-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4006, '星巴克咖啡二店', '正常营业', '企业连锁', '赵咖啡', '13800001006', DATE '2023-04-01', DATE '2026-03-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4007, '康之家药店', '正常营业', '企业连锁', '孙药师', '13800001007', DATE '2022-12-01', DATE '2025-11-30');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4008, '科技数码港', '歇业中', '个人', '周数码', '13800001008', DATE '2023-07-01', DATE '2026-06-30');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4009, '麦当劳餐厅二店', '正常营业', '企业连锁', '吴餐饮', '13800001009', DATE '2023-02-01', DATE '2028-01-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (4010, '美容美发沙龙', '翻新中', '个人', '郑美容', '13800001010', DATE '2023-08-01', DATE '2026-07-31');

-- 5. 商户信息统计测试店铺
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (5003, '统计测试咖啡厅', '正常营业', '个人经营', '张三', '13800001003', DATE '2024-01-01', DATE '2025-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (5004, '统计测试星巴克', '正常营业', '企业连锁', '星巴克中国', '13800001004', DATE '2024-01-15', DATE '2026-01-14');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (5005, '统计测试书店', '正常营业', '个人经营', '李四', '13800001005', DATE '2024-02-01', DATE '2025-01-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (5006, '统计测试优衣库', '正常营业', '企业连锁', '优衣库', '13800001006', DATE '2023-12-01', DATE '2025-11-30');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (5007, '统计测试小餐厅', '维修中', '个人经营', '王五', '13800001007', DATE '2024-03-01', DATE '2025-02-28');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (5008, '统计测试便利店', '暂停营业', '企业连锁', '7-ELEVEn', '13800001008', DATE '2024-01-01', DATE '2024-12-31');

-- 6. 租金收取功能测试店铺
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6001, '租金测试咖啡厅', '正常营业', '个人经营', '张老板', '13800006001', DATE '2024-01-01', DATE '2025-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6002, '租金测试书店', '正常营业', '个人经营', '李老板', '13800006002', DATE '2024-02-01', DATE '2025-01-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6003, '租金测试服装店', '正常营业', '企业连锁', '王经理', '13800006003', DATE '2024-01-15', DATE '2025-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6004, '租金测试餐厅', '正常营业', '个人经营', '赵老板', '13800006004', DATE '2023-12-01', DATE '2025-11-30');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6005, '租金测试便利店', '正常营业', '企业连锁', '钱经理', '13800006005', DATE '2024-03-01', DATE '2026-02-28');

COMMIT;

-- =====================================================================================
-- 第五部分：商户账号和关联关系
-- =====================================================================================

-- 1. 基础商户账号
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('store_000001', 'store123', '商户', '张三', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('merchant_001', 'merchant123', '商户', '咖啡厅老板', 4);

-- 2. 店面状态管理相关商户账号
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('store_003001', 'initpass1', '商户', '麦当劳中国', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('store_003002', 'initpass2', '商户', '小米科技', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('store_003003', 'initpass3', '商户', '周大福集团', 4);

-- 3. 租金统计相关商户账号
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('fashion_merchant', 'Fashion123', '商户', '李时尚', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('sports_merchant', 'Sports123', '商户', '王运动', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('jewelry_merchant', 'Jewelry123', '商户', '陈珠宝', 4);

-- 4. 商户信息统计相关账号（使用不同的账号名避免冲突）
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('cafe5003', 'pass123', '商户', '咖啡厅管理员', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('starbucks5004', 'pass123', '商户', '星巴克管理员', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('bookshop5005', 'pass123', '商户', '书店管理员', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('uniqlo_5006', 'pass123', '商户', '优衣库管理员', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('restaurant_5007', 'pass123', '商户', '小餐厅管理员', 4);

INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
VALUES ('seven_5008', 'pass123', '商户', '便利店管理员', 4);

-- 5. 示例店铺账号
INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY)
VALUES ('shop_2001', 'shop@123', '商户', '测试便利店', 2);

COMMIT;

-- =====================================================================================
-- 第六部分：建立账号与店铺的关联关系
-- =====================================================================================

-- 基础关联
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('store_000001', 1);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('merchant_001', 6001);

-- 店面状态管理关联
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('store_003001', 3001);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('store_003002', 3002);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('store_003003', 3003);

-- 租金统计关联（使用新的店铺ID）
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('fashion_merchant', 4001);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('sports_merchant', 4002);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('jewelry_merchant', 4004);

-- 商户信息统计关联（使用新的账号名）
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('cafe5003', 5003);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('starbucks5004', 5004);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('bookshop5005', 5005);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('uniqlo_5006', 5006);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('restaurant_5007', 5007);
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('seven_5008', 5008);

-- 示例店铺关联（修复ID冲突）
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('shop_2001', 2001);

COMMIT;

-- =====================================================================================
-- 第七部分：建立店铺与区域的租用关系
-- =====================================================================================

-- 基础租用关系
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (1, 1);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (2001, 1001);

-- 店面状态管理租用关系
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (3001, 2001);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (3002, 2002);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (3003, 2003);

-- 租金统计租用关系（使用新的店铺ID）
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4001, 3001);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4002, 3002);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4003, 3003);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4004, 3004);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4005, 3005);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4006, 3006);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4007, 3007);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4008, 3008);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4009, 3009);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (4010, 3010);

-- 商户信息统计租用关系
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (5003, 5003);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (5004, 5004);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (5005, 5005);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (5006, 5006);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (5007, 5007);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (5008, 5008);

-- 租金收取租用关系
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6001, 6001);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6002, 6002);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6003, 6003);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6004, 6004);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6005, 6005);

COMMIT;

-- =====================================================================================
-- 第八部分：更新区域状态（确保数据一致性）
-- =====================================================================================

-- 更新已租用区域的状态
UPDATE AREA SET ISEMPTY = 0 WHERE AREA_ID IN (1, 1003, 2001, 2002, 2003, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 5003, 5004, 5005, 5006, 5007, 5008, 6001, 6002, 6003, 6004, 6005);

-- 更新零售区域状态
UPDATE RETAIL_AREA SET RENT_STATUS = '已租用' WHERE AREA_ID IN (1, 1003, 2001, 2002, 2003, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 5003, 5004, 5005, 5006, 5007, 5008, 6001, 6002, 6003, 6004, 6005);

-- 更新3010区域状态（翻新中的店铺仍占用区域）
UPDATE AREA SET ISEMPTY = 0 WHERE AREA_ID = 3010;
UPDATE RETAIL_AREA SET RENT_STATUS = '已租用' WHERE AREA_ID = 3010;

COMMIT;

-- =====================================================================================
-- 第九部分：数据验证和统计查询
-- =====================================================================================

PROMPT '=====================================================================================';
PROMPT '                           测试数据导入完成验证';
PROMPT '=====================================================================================';

PROMPT '1. 账号统计：';
SELECT IDENTITY AS "账号类型", COUNT(*) AS "数量" 
FROM ACCOUNT 
GROUP BY IDENTITY 
ORDER BY IDENTITY;

PROMPT '2. 店铺统计：';
SELECT 
    COUNT(*) AS "总店铺数",
    COUNT(CASE WHEN STORE_STATUS = '正常营业' THEN 1 END) AS "正常营业",
    COUNT(CASE WHEN STORE_STATUS = '歇业中' THEN 1 END) AS "歇业中",
    COUNT(CASE WHEN STORE_STATUS = '维修中' THEN 1 END) AS "维修中",
    COUNT(CASE WHEN STORE_STATUS = '暂停营业' THEN 1 END) AS "暂停营业",
    COUNT(CASE WHEN STORE_STATUS = '翻新中' THEN 1 END) AS "翻新中"
FROM STORE 
WHERE STORE_ID < 10000;

PROMPT '3. 区域统计：';
SELECT 
    COUNT(*) AS "总区域数",
    COUNT(CASE WHEN ISEMPTY = 1 THEN 1 END) AS "空置区域",
    COUNT(CASE WHEN ISEMPTY = 0 THEN 1 END) AS "已租用区域",
    ROUND(COUNT(CASE WHEN ISEMPTY = 0 THEN 1 END) * 100.0 / COUNT(*), 2) AS "入住率(%)"
FROM AREA 
WHERE AREA_ID < 10000;

PROMPT '4. 租金统计：';
SELECT 
    COUNT(*) AS "已租用区域数",
    ROUND(AVG(BASE_RENT), 2) AS "平均租金",
    SUM(BASE_RENT) AS "总租金收入",
    MAX(BASE_RENT) AS "最高租金",
    MIN(BASE_RENT) AS "最低租金"
FROM RETAIL_AREA ra
JOIN AREA a ON ra.AREA_ID = a.AREA_ID
WHERE a.AREA_ID < 10000 AND ra.RENT_STATUS = '已租用';

PROMPT '5. 租用关系统计：';
SELECT COUNT(*) AS "租用关系总数" 
FROM RENT_STORE rs
JOIN AREA a ON rs.AREA_ID = a.AREA_ID
WHERE a.AREA_ID < 10000;

PROMPT '6. 账号关联统计：';
SELECT 
    COUNT(DISTINCT sa.ACCOUNT) AS "有店铺关联的商户账号数",
    COUNT(DISTINCT sa.STORE_ID) AS "有账号关联的店铺数"
FROM STORE_ACCOUNT sa
JOIN STORE s ON sa.STORE_ID = s.STORE_ID
WHERE s.STORE_ID < 10000;

PROMPT '=====================================================================================';
PROMPT '                              测试账号信息';
PROMPT '=====================================================================================';
PROMPT '管理员账号：';
PROMPT '- admin/admin123 (权限1) - 系统管理员';
PROMPT '- admin_test/admin123 (权限1) - 测试管理员';
PROMPT '- finance_admin/finance123 (权限1) - 财务部主管';
PROMPT '- finance_manager/Finance123 (权限2) - 财务经理';
PROMPT '- statistics_viewer/Stats123 (权限3) - 统计查看员';
PROMPT '- rent_admin/RentAdmin123 (权限1) - 租金管理员';
PROMPT '';
PROMPT '普通用户账号：';
PROMPT '- guest/guest123 (权限5) - 普通用户';
PROMPT '';
PROMPT '商户账号示例：';
PROMPT '- fashion_merchant/Fashion123 (权限4) - 服装店商户';
PROMPT '- sports_merchant/Sports123 (权限4) - 运动店商户';
PROMPT '- jewelry_merchant/Jewelry123 (权限4) - 珠宝店商户';
PROMPT '- cafe5003/pass123 (权限4) - 咖啡厅管理员';
PROMPT '- starbucks5004/pass123 (权限4) - 星巴克管理员';
PROMPT '- bookshop5005/pass123 (权限4) - 书店管理员';
PROMPT '';
PROMPT '员工账号：';
PROMPT '- staff_zhang/password123 (权限1) - 张三（员工）';
PROMPT '';
PROMPT '=====================================================================================';
PROMPT '                             功能测试覆盖';
PROMPT '=====================================================================================';
PROMPT '✓ 新增店面功能测试 - 区域1001-1003';
PROMPT '✓ 商户信息管理功能测试 - 基础店铺和账号';
PROMPT '✓ 店面状态管理功能测试 - 店铺3001-3003';
PROMPT '✓ 商户信息统计报表功能测试 - 店铺5003-5008';
PROMPT '✓ 商户租金统计报表功能测试 - 店铺4001-4010';
PROMPT '✓ 商户租金收取功能测试 - 店铺6001-6005';
PROMPT '✓ 权限管理测试 - 不同权限等级账号';
PROMPT '✓ 数据完整性测试 - 外键约束和数据一致性';
PROMPT '';
PROMPT '=====================================================================================';
PROMPT '             🎉 所有测试数据导入完成！现在可以运行所有测试功能 🎉';
PROMPT '=====================================================================================';

-- 最终提交
COMMIT;