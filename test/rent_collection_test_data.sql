-- 商户租金收取功能测试数据 (用例2.7.6)
-- 创建租金收取相关的测试数据



-- 1. 确保必要的测试账号存在
BEGIN
    -- 创建财务管理员账号
    DECLARE
        account_count NUMBER;
    BEGIN
        SELECT COUNT(*) INTO account_count FROM ACCOUNT WHERE ACCOUNT = 'finance_admin';
        
        IF account_count = 0 THEN
            INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
            VALUES ('finance_admin', 'finance123', '财务管理员', '财务部主管', 1);
            DBMS_OUTPUT.PUT_LINE('财务管理员账号创建成功');
        ELSE
            DBMS_OUTPUT.PUT_LINE('财务管理员账号已存在');
        END IF;
    END;

    -- 创建普通商户账号
    DECLARE
        account_count NUMBER;
    BEGIN
        SELECT COUNT(*) INTO account_count FROM ACCOUNT WHERE ACCOUNT = 'merchant_001';
        
        IF account_count = 0 THEN
            INSERT INTO ACCOUNT (ACCOUNT, PASSWORD, IDENTITY, USERNAME, AUTHORITY) 
            VALUES ('merchant_001', 'merchant123', '商户', '咖啡厅老板', 4);
            DBMS_OUTPUT.PUT_LINE('商户账号创建成功');
        ELSE
            DBMS_OUTPUT.PUT_LINE('商户账号已存在');
        END IF;
    END;
END;
/

-- 2. 清理现有测试数据
DELETE FROM RENT_STORE WHERE AREA_ID IN (6001, 6002, 6003, 6004, 6005);
DELETE FROM STORE_ACCOUNT WHERE STORE_ID IN (SELECT STORE_ID FROM STORE WHERE STORE_NAME LIKE '租金测试%');
DELETE FROM STORE WHERE STORE_NAME LIKE '租金测试%';
DELETE FROM RETAIL_AREA WHERE AREA_ID IN (6001, 6002, 6003, 6004, 6005);
DELETE FROM AREA WHERE AREA_ID IN (6001, 6002, 6003, 6004, 6005);

-- 3. 创建测试区域和店铺
-- 创建5个测试区域
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6001, 0, 80, 'RETAIL');   -- 已租用
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6002, 0, 120, 'RETAIL');  -- 已租用
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6003, 0, 100, 'RETAIL');  -- 已租用
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6004, 0, 150, 'RETAIL');  -- 已租用
INSERT INTO AREA (AREA_ID, ISEMPTY, AREA_SIZE, CATEGORY) VALUES (6005, 0, 90, 'RETAIL');   -- 已租用

-- 创建对应的零售区域
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6001, '已租用', 12000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6002, '已租用', 18000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6003, '已租用', 15000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6004, '已租用', 22000.00);
INSERT INTO RETAIL_AREA (AREA_ID, RENT_STATUS, BASE_RENT) VALUES (6005, '已租用', 13000.00);

-- 创建对应的店铺
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6001, '租金测试咖啡厅', '正常营业', '个人经营', '张老板', '13800006001', DATE '2024-01-01', DATE '2025-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6002, '租金测试书店', '正常营业', '个人经营', '李老板', '13800006002', DATE '2024-02-01', DATE '2025-01-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6003, '租金测试服装店', '正常营业', '企业连锁', '王经理', '13800006003', DATE '2024-01-15', DATE '2025-12-31');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6004, '租金测试餐厅', '正常营业', '个人经营', '赵老板', '13800006004', DATE '2023-12-01', DATE '2025-11-30');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_STATUS, STORE_TYPE, TENANT_NAME, CONTACT_INFO, RENT_START, RENT_END) 
VALUES (6005, '租金测试便利店', '正常营业', '企业连锁', '钱经理', '13800006005', DATE '2024-03-01', DATE '2026-02-28');

-- 创建租用关系
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6001, 6001);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6002, 6002);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6003, 6003);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6004, 6004);
INSERT INTO RENT_STORE (STORE_ID, AREA_ID) VALUES (6005, 6005);

-- 4. 创建店铺账号关联
INSERT INTO STORE_ACCOUNT (ACCOUNT, STORE_ID) VALUES ('merchant_001', 6001);

-- 提交数据
COMMIT;

-- 6. 验证测试数据
PROMPT '=== 租金收取功能测试数据验证 ===';

-- 基础数据验证
SELECT '测试店铺数' AS 统计项, COUNT(*) AS 数值 FROM STORE WHERE STORE_NAME LIKE '租金测试%';
SELECT '测试区域数' AS 统计项, COUNT(*) AS 数值 FROM AREA WHERE AREA_ID BETWEEN 6001 AND 6005;
SELECT '租用关系数' AS 统计项, COUNT(*) AS 数值 FROM RENT_STORE WHERE AREA_ID BETWEEN 6001 AND 6005;

-- 账号权限验证
PROMPT '=== 账号权限验证 ===';
SELECT ACCOUNT, IDENTITY, USERNAME, AUTHORITY FROM ACCOUNT WHERE ACCOUNT IN ('finance_admin', 'merchant_001', 'admin');

PROMPT '=== 租金收取功能测试数据创建完成 ===';
PROMPT '测试说明：';
PROMPT '1. 创建了5个测试店铺（6001-6005）和对应的区域';
PROMPT '2. 创建了财务管理员账号：finance_admin（权限1）';
PROMPT '3. 创建了商户账号：merchant_001（权限4）';
PROMPT '4. 可以使用这些数据测试商户管理的基本功能';
